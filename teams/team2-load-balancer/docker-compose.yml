version: '3.8'

services:
  # Load Balancer Service
  load-balancer:
    build: .
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - PORT=8080
    volumes:
      - ./src:/app/src:ro
    networks:
      - load-balancer-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Mock UI Service (for testing)
  mock-ui:
    image: nginx:alpine
    ports:
      - "3000:80"
    volumes:
      - ./mock-ui.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - load-balancer-network

  # Mock Orchestrator Service
  mock-orchestrator:
    image: nginx:alpine
    ports:
      - "8081:80"
    volumes:
      - ./mock-orchestrator.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - load-balancer-network

  # Mock Billing Service
  mock-billing:
    image: nginx:alpine
    ports:
      - "8083:80"
    volumes:
      - ./mock-billing.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - load-balancer-network

  # Mock Workload Service
  mock-workload:
    image: nginx:alpine
    ports:
      - "8084:80"
    volumes:
      - ./mock-workload.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - load-balancer-network

networks:
  load-balancer-network:
    driver: bridge 